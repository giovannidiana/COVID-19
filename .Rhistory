cov.plot_param(as.numeric(data[61,5:TF]),c(0.,0.0045,0.001,0.0001,1))
cov.plot_param(as.numeric(data[61,5:TF]),c(0.,0,0.,0,1))
cov.plot_param(as.numeric(data[61,5:TF]),c(0.,0,0.,0,0))
cov.sim(c(0,0,0,0,0))
source("simul.R")
sam_it=cov.MCMC(data[61,5:ncol(data)],10000)
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100)
source("simul.R")
source("simul.R")
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100,tf=100)
source("simul.R")
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100,tf=100,ymax=1000)
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100,tf=100,ymax=1000000)
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100,tf=100,ymax=10000)
cov.plot_last(as.numeric(data[61,5:TF]),sam_it,100,tf=50,ymax=10000)
sam_12=cov.MCMC(data[12,5:ncol(data)],10000)
sam_12=cov.MCMC(data[12,5:ncol(data)],10000)
sam_12=cov.MCMC(data[12,5:ncol(data)],10000)
sam_12=cov.MCMC(data[12,5:ncol(data)],1000)
sam_12=cov.MCMC(data[12,5:ncol(data)],1000)
plot(sam_12[,1])
plot(sam_12[,2])
plot(sam_12[,3])
cov.plot_last(as.numeric(data[12,5:TF]),sam_it,100)
source("simul.R")
sam_12=cov.MCMC(data[12,5:ncol(data)],1000)
cov.plot_last(as.numeric(data[12,5:TF]),sam_it,100)
source("simul.R")
sam_12=cov.MCMC(data[12,5:ncol(data)],1000)
cov.plot_last(as.numeric(data[12,5:TF]),sam_12,100)
TF
data[12,]
as,numeric(data[12,5:37])
as.numeric(data[12,5:37])
TF
ncol(data)
as.numeric(data[12,5:37])
as.numeric(data[12,5:41])
cov.plot_last(as.numeric(data[12,5:41]),sam_12,100)
sam_12=cov.MCMC(data[12,5:41],1000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,100)
sam_12=cov.MCMC(data[12,5:30],1000)
cov.plot_last(as.numeric(data[12,5:30]),sam_12,100)
source("simul.R")
sam_12=cov.MCMC(data[12,5:30],1000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,37,100)
sam_12=cov.MCMC(data[12,5:41],1000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,37,100)
sam_12=cov.MCMC(data[12,5:35],1000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,37,100)
sam_12=cov.MCMC(data[12,5:35],10000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,37,100)
sam_12=cov.MCMC(data[12,5:20],10000)
cov.plot_last(as.numeric(data[12,5:41]),sam_12,37,100)
sam_11=cov.MCMC(data[11,5:20],10000)
cov.plot_last(as.numeric(data[11,5:41]),sam_11,37,100)
sam_10=cov.MCMC(data[10,5:20],10000)
cov.plot_last(as.numeric(data[10,5:41]),sam_10,37,100)
sam_10=cov.MCMC(data[10,5:41],10000)
cov.plot_last(as.numeric(data[10,5:41]),sam_10,37,100)
cov.plot_last(as.numeric(data[10,5:41]),sam_10,37,100)
source("simul_prob.R")
sam_glob=cov.GlobalMCMC(NITER=50000)
cov.GlobalPlot(sam_glob,50)
dev.off()
cov.plotFromGlobal(33,sam_glob,ncol(data),50)
cov.plotFromGlobal(61,sam_glob,ncol(data),50)
a=lapply(sam_glob,"[[",1)
a
a[[1]][1,]
sapply(a,function(x) x[61,2])
z=sapply(a,function(x) x[61,2])
plot(z)
z=sapply(a,function(x) x[61,3])
plot(z)
z=sapply(a,function(x) x[61,1])
plot(z)
cov.plot_last(as.numeric(data[10,5:41]),sam_10,37,100)
par(ask=T)
for(i in 1:100) cov.plotFromGlobal(i,sam_glob,ncol(data),50)
plot(cov.sim(c(1,2,2,1),100,.1)[[1]])
plot(cov.sim(c(1,2,2,1),100,1)[[1]])
plot(cov.sim(c(.1,.2,.2,1),100,1)[[1]])
par(ask=F)
plot(cov.sim(c(.4,.2,.2,1),100,1)[[1]])
plot(cov.sim(c(.4,.1,.2,1),100,1)[[1]])
plot(cov.sim(c(.4,.1,.1,1),100,1)[[1]])
plot(cov.sim(c(1,.1,.1,1),100,1)[[1]])
plot(cov.sim(c(.2,.1,.1,1),100,1)[[1]])
plot(cov.sim(c(.2,.1,.1,1),100,.1)[[1]])
plot(cov.sim(c(.2,.1,.1,1),100,.1)[[1]],type='l')
plot(cov.sim(c(.2,.1,.1,1),100,.1)[[1]],type='l',wdt=2)
plot(cov.sim(c(.2,.1,.1,1),100,.1)[[1]],type='l',wdt=2)
plot(cov.sim(c(.2,.1,.1,1),100,.1)[[1]],type='l',lwd=2)
source("figures.R")
plot(cov.sim(c(1,1,1,1),100,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(1,.1,.1,1),100,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(1,.1,.1,1),20,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(3,.1,.1,1),40,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(10,.1,.1,1),40,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(5,.01,.01,1),40,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(5,.001,.001,1),40,.01)[[1]],type='l',lwd=2,)
plot(cov.sim(c(5,.001,.001,1),40,.0001)[[1]],type='l',lwd=2,)
plot(cov.sim(c(2,.01,.01,1),40,.0001)[[1]],type='l',lwd=2,)
plot(cov.sim(c(.1,.01,.01,1),40,.0001)[[1]],type='l',lwd=2,)
plot(cov.sim(c(.1,.01,.01,1),100,.0001)[[1]],type='l',lwd=2,)
plot(cov.sim(c(.1,.1,.01,1),100,.0001)[[1]],type='l',lwd=2,)
source("figures.R")
source("figures.R")
source("figures.R")
plot(data[1,])
data_ts
data_ts[1:3,]
data_ts[,1:3]
data_ts['hubei',1:3]
data_ts[which(data_ts[,2]='hubei'),1:3]
data_ts[which(data_ts[,2]=='hubei'),1:3]
data_ts[which(data_ts[,1]=='hubei'),1:3]
data_ts[which(data_ts[,1]=='Hubei'),1:3]
plot(data_conf[13])
plot(data_conf[13,])
plot(diff(data_conf[13,]))
barplot(diff(data_conf[13,]))
barplot(rbind(diff(data_conf[13,]),diff(data_death[13,]),diff(data_rec[13,]))
)
)barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,]))
        col=c("red","green","purple" ))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,]))
        col=c("red","green","purple" ))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2)
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
strtrim("C123",1)
strtrim("C123",-3)
strtrim("C123",3)
substrng("C123",3)
substring("C123",3)
substring("C123",2)
substring(c("C123","X133"),2)
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,arg.names=substring(colnames(data_conf),1))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,names.arg=substring(colnames(data_conf),1))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
substring(names(data_conf),1))
substring(names(data_conf),1)
names(data_conf)
data_conf
names(data_death_
names(data_death)
data_conf[1,]
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,names.arg=substring(rownames(data_conf),1))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
rownames(data_conf)
data_conf[1,]
names(data_ts)
names(data_conf)
class(data_conf)
names(data_ts)
names(data0)
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,names.arg=substring(names(data_ts)[5:ncol(data_ts)],1))
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,names.arg=substring(names(data_ts)[5:ncol(data_ts)],1)[-1])
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
barplot(rbind(diff(data_conf[13,]),
              diff(data_rec[13,]), 
              diff(data_death[13,])),
        col=c("red","green","purple" ),las=2,names.arg=substring(names(data_ts)[5:ncol(data_ts)],2)[-1])
legend("topright",legend=c("confirmed","recovered","deaths"),fill=c("red","green","purple" ))
source("figures.R")
source("figures.R")
source("figures.R")
data_ts[12,]
library(readr)
install.packages("readr")
library(readr)
file_conf = "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"
u=read_csv(file_conf)
u=read_csv(file_conf)
u
file_conf = "https://raw.github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"
data_conf<-read_csv(file_conf)
u
file_conf = "ata/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"
data_conf<-read_csv(file_conf)
file_conf = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"
data_conf<-read_csv(file_conf)
u
file_conf = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
file_conf = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"
data_conf<-read_csv(file_conf)
library(curl)
install.packages(curl)
install.packages("curl")
data_conf<-read_csv(file_conf)
data_conf
data_conf[1,5]
as.matrix(data_conf)
as.matrix(data_conf[,5:ncol(data_conf)])
data_conf
data_conf$Country/Region
data_conf[,"Country/Region"]
u=1:10
u=1:2
names(u)<-c("a","b")
u
u[1]
u['a']
u['b']
u['bc']
u['c']
hist(rnbinom(1000,10,0.1))
hist(rnbinom(1000,1,0.1))
hist(rnbinom(1000,0.1,0.5))
hist(rnbinom(1000,40,0.5))
hist(rnbinom(1000,4000,0.5))
hist(rnbinom(1000,1000,0.5))
hist(rnbinom(1000,1000,0.1))
hist(rnbinom(1000,1000,0.9))
hist(rnbinom(1000,1000,0.9))
hist(rnbinom(1000,100,0.9))
hist(rgamma(1000,1,1)))
hist(rgamma(1000,1,1))
hist(rgamma(1000,1,110))
hist(rgamma(1000,10,1))
hist(rnbinom(1000,100,0.9))
source("simul_prob.R")
source("simul_prob.R")
rawdata_conf
source("simul_prob.R")
sam_glob<-cov.GlobalMCMC(NITER=50000)
cov.GlobalPlot(sam_glob,50,ncol(data))
X11()
par(ask=T)
for(i in 1:120) cov.plot_last(data[i,],sam_glob,ncol(data),100)
for(i in 1:120) cov.plot_last(data[i,],sam_glob,ncol(data),100)
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
country
country[1]
country[1,]
as.character(country)
as.character(country)[1]
country[1,]
source("simul_prob.R")
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
source("simul_prob.R")
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
source("simul_prob.R")
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
X11()
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
par(ask=T)
par(ask=T)
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
 cov.plotFromGlobal(61,sam_glob,ncol(data),100)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,600)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100,600)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100)
source("simul_prob.R")
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100,600)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100,ymax=600)
source("simul_prob.R")
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100,ymax=600)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+20,100,ymax=2000)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+120,100,ymax=2000)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+10,100,ymax=1000)
rpois(10)
rpois(10,lambda=10)
source("simul+binom.R")
s12=cov.MCMC(data[12,10000))
s12=cov.MCMC(data[12,],10000))
s12=cov.MCMC(data[12,],10000)
cov.sim(c(.1,.1,.2,1,.1),100,.1)
source("simul+binom.R")
cov.sim(c(.1,.1,.2,1,.1),100,.1)
s12=cov.MCMC(data[12,],10000)
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
source("simul+binom.R")
s12=cov.MCMC(data[12,],10)
s12=cov.MCMC(data[12,],10000)
cov.plot(data[12,],s12,ncol(data))
source("simul+binom.R")
cov.plot(data[12,],s12,ncol(data))
cov.plot_last(data[12,],s12,ncol(data),30)
s61=cov.MCMC(data[51,],10000)
s61=cov.MCMC(data[61,],10000)
cov.plot(data[61,],s61,ncol(data))
cov.plot_last(data[61,],s61,ncol(data),30)
cov.plot_last(data[61,],s61,ncol(data)+100,30,ymax=1000)
source("simul+binom.R")
sam_glob<-cov.GlobalMCMC(NITER=5000)
source("simul+binom.R")
sam_glob<-cov.GlobalMCMC(NITER=5000)
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1)
source("simul+binom.R")
sam_glob<-cov.GlobalMCMC(NITER=1)
source("simul+binom.R")
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1)
cov.plot_last(data[61,],s61,ncol(data)+100,30,ymax=1000)
data[61,]
NITER=1
Al=1
        Bl=10
        A=c(1,1,1,1,1)
        B=c(10,10,1,1,1)
        nvar=6
        nc=nrow(data)
        tf=ncol(data)
        prop_size_lam=1000
        prop_size=100
        params=matrix(NA,nc,nvar-1)
        lambda=rgamma(1,Al,Bl)
        for(i in 1:nc){
                params[i,]=rgamma(nvar-1,A,B)
        }
params_samples=vector("list",NITER)
        params_samples[[1]]=list(param=params,lambda=lambda)
LogLik = cov.GlobalLogLikelihood(lambda,params,Al,Bl,A,B,tf)
LogLik
LogLik = cov.GlobalLogLikelihood(lambda,params,Al,Bl,A,B,tf,print=T)
lam=lambda
lam
paramlist=paramms
paramlist=params
params
p=c(lam,paramlist[i,])
p
names(p)<-c("lambda","q","h","x0","k+","k-")
res=cov.sim(p,tf)
res
pp=p['k+']*res[[2]]/(p['k+']*res[[2]]+p['k-'])
pp
i=1
dpois(data[i,],lambda=res[[1]]*pp,log=T)
res[[1]]*pp
source("simul+binom.R")
sam_glob<-cov.GlobalMCMC(NITER=1)
sam_glob<-cov.GlobalMCMC(NITER=1000)
cov.plotFromGlobal(61,sam_glob,ncol(data),100)
source("simul+binom.R")
cov.plotFromGlobal(61,sam_glob,ncol(data),100)
sam_glob<-cov.GlobalMCMC(NITER=20000)
cov.GlobalPlot(sam_glob,50,ncol(data))
X11()
par(ask=T)
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
i=61;cov.plotFromGlobal(i,sam_glob,ncol(data)+50,100,ymax=1000)
i=61;cov.plotFromGlobal(i,sam_glob,ncol(data)+50,100,ymax=600)
names(data)[1]
names(data_conf)[1]
names(rawdata_conf)[1]
names(rawdata_conf)[1]
rawdata_conf[1,]
source("simul+binom.R")
cov.ProbFromGlobal.plot(61,sam_glob,ncol(data),100)
cov.ProbFromGlobal.plot(61,sam_glob,ncol(data)+40,100)
cov.ProbFromGlobal.plot(61,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(33,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(43,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(61,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(12,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(1,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(2,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(3,sam_glob,ncol(data)+80,100)
cov.ProbFromGlobal.plot(4,sam_glob,ncol(data)+80,100)
for(i in 1:120) cov.plotFromGlobal(i,sam_glob,ncol(data),100)
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=100)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,100)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,50)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,10)
sam_prior
sam_prior=cov.PriorSample(NITER=1000)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,10)
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=1000)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,10)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,400)
cov.plotFromGlobal(1,sam_prior,ncol(data)+80,400)
cov.ProbFromGlobal.plot(1,sam_prior,ncol(data)+80,100)
cov.ProbFromGlobal.plot(2,sam_prior,ncol(data)+80,100)
cov.ProbFromGlobal.plot(61,sam_glob,ncol(data)+80,100)
cov.plotFromGlobal(61,sam_glob,ncol(data)+80,100)
cov.plotFromGlobal(112,sam_glob,ncol(data)+80,100)
cov.plotFromGlobal(112,sam_prior,ncol(data)+80,100)
hist(rgamma(1000,1,1))
hist(rgamma(1000,10,1))
hist(rgamma(1000,10,3))
hist(rgamma(1000,20,1))
hist(rgamma(1000,2,1))
hist(rgamma(1000,3,1))
hist(rgamma(1000,2,1))
hist(rgamma(1000,1,.2))
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,100,ymax=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,100,ymax=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,400,ymax=1000)
hist(rgamma(1000,1,10))
hist(rgamma(1000,1,20))
hist(rgamma(1000,1,40))
hist(rgamma(1000,1,10))
hist(rgamma(1000,1,1))
hist(rgamma(1000,1,2))
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=10000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,100,ymax=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=10000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
hist(rgamma(1000,1,2))
hist(rgamma(1000,1,10))
source("simul+binom.R")
sam_prior=cov.PriorSample(NITER=10000)
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
hist(rgamma(1000,1,10))
hist(rgamma(1000,1,.2))
source("simul+binom.R")
sam_112<-cov.MCMC(data[112,],10000)
cov.plot_last(data[112,],sam_112,ncol(data),100)
cov.plot_last(data[112,],sam_112,ncol(data)+100,100)
source("simul+binom.R")
cov.Prob.plot(data[112,],sam_112,ncol(data)+100,100)
sam_61<-cov.MCMC(data[61,],10000)
cov.Prob.plot(data[61,],sam_61,ncol(data)+100,100)
cov.Prob.plot(data[61,],sam_61,ncol(data)+100,100,ymax=1)
cov.plot_last(data[61,],sam_61,ncol(data)+100,100)
sam_glob=cov.GlobalMCMC(NITER=50000)
source("simul+binom.R")
sam_glob=cov.GlobalMCMC(NITER=50000)
sam_glob=cov.GlobalMCMC(NITER=500)
sam_glob=cov.GlobalMCMC(NITER=1)
sam_glob=cov.GlobalMCMC(NITER=2)
sam_glob=cov.GlobalMCMC(NITER=10)
sam_glob
u=apply(sam_glob,"[[",2)
u=lapply(sam_glob,"[[",2)
u
sam_glob[[1]][1,])
sam_glob[[1]][1,]
sam_glob[[1]]
sam_glob[[1]][[1]][1,]
sam_glob[[2]][[1]][1,]
sam_glob[[3]][[1]][1,]
sam_glob[[3]][[1]][,1]
sam_glob[[3]][[1]][1,]
sam_glob[[3]][[1]][,1]
sam_glob[[1]][[1]][,1]
sam_glob[[2]][[1]][,1]
sam_glob[[3]][[1]][,1]
sam_glob[[4]][[1]][,1]
sam_glob[[5]][[1]][,1]
sam_glob[[6]][[1]][,1]
hist(rgamma(1000,100,100))
source("simul+binom.R")
sam_glob=cov.GlobalMCMC(NITER=50000)
save(sam_glob,file="global_samples.RData")
 cov.plotFromGlobal(61,sam_prior,ncol(data)+10,500,ymax=1000)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+10,500,ymax=1000)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+10,500,ymax=1000)
 cov.plotFromGlobal(61,sam_glob,ncol(data)+70,500,ymax=1000)
